#!/bin/bash -ue

echo "Release name:" "$@"

release_name=$@

# Check if the argument is a valid release name
if !([[ $release_name =~ ^v[0-9]*\.[0-9]*\.[0-9]*-?[a-z]*[0-9]*$ ]]); then
    echo "Ops! Something is wrong!
    ======== Valid names ========
    v1.0.0
    v1.2.3-beta10
    v103.034.15-beta1

    ======== Invalid names ========
    1.0.0
    v1.0
    v1.beta10"

    exit 1
fi

echo "Creating release..."

# Commit changes (ignore if no changes)
git commit -am "$release_name" || true

# Delete local tag if it exists
if git rev-parse "$release_name" >/dev/null 2>&1; then
    echo "Tag $release_name already exists locally. Overwriting..."
    git tag -d "$release_name"
fi

# Create the new tag
git tag "$release_name"

# Force push the tag to remote first
git push origin "refs/tags/$release_name" --force

# Then handle GitHub release
if command -v gh >/dev/null 2>&1; then
    # Delete existing GitHub release (if any)
    if gh release view "$release_name" >/dev/null 2>&1; then
        echo "GitHub release $release_name already exists. Deleting..."
        gh release delete "$release_name" -y
    fi

    # Create new release
    gh release create "$release_name" \
        --title "$release_name" \
        --notes "Automated release $release_name"

    echo "GitHub release created successfully."
else
    echo "⚠️ GitHub CLI (gh) not installed. Only pushed tag, no release created."
fi


echo "***** DONE *****"
echo "Check the new release here:"
echo "https://github.com/utrustdev/utrust-for-woocommerce/releases"
